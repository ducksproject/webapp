/**
 * Radix Babylon Gateway API
 * This API is designed to enable clients to efficiently query information on the RadixDLT ledger, and allow clients to build and submit transactions to the network. It is designed for use by wallets and explorers.  This document is an API reference documentation, visit [User Guide](https://docs.radixdlt.com/main/apis/gateway-api.html) to learn more about different usage scenarios.  The Gateway API is implemented by the [Network Gateway](https://github.com/radixdlt/babylon-gateway), which is configured to read from [full node(s)](https://github.com/radixdlt/babylon-node) to extract and index data from the network.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { LedgerStateSelector } from './LedgerStateSelector';
/**
 *
 * @export
 * @interface EntityNonFungiblesRequest
 */
export interface EntityNonFungiblesRequest {
    /**
     *
     * @type {LedgerStateSelector}
     * @memberof EntityNonFungiblesRequest
     */
    at_ledger_state?: LedgerStateSelector | null;
    /**
     * Bech32m-encoded human readable version of the entity's global address.
     * @type {string}
     * @memberof EntityNonFungiblesRequest
     */
    address: string;
    /**
     * This cursor allows forward pagination, by providing the cursor from the previous request.
     * @type {string}
     * @memberof EntityNonFungiblesRequest
     */
    cursor?: string | null;
    /**
     * The page size requested.
     * @type {number}
     * @memberof EntityNonFungiblesRequest
     */
    limit?: number | null;
}
/**
 * Check if a given object implements the EntityNonFungiblesRequest interface.
 */
export declare function instanceOfEntityNonFungiblesRequest(value: object): boolean;
export declare function EntityNonFungiblesRequestFromJSON(json: any): EntityNonFungiblesRequest;
export declare function EntityNonFungiblesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityNonFungiblesRequest;
export declare function EntityNonFungiblesRequestToJSON(value?: EntityNonFungiblesRequest | null): any;
